{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-Oindrila-2022-March"
		},
		"LS_SQLServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SQLServer'"
		},
		"LS_oindrila_workspace_2022_march_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'LS_oindrila_workspace_2022_march'"
		},
		"LS_KV_Oindrila_2022_March_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-oindrila-2022-march.vault.azure.net/"
		},
		"LS_adlsoindrila2022march_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsoindrila2022march.dfs.core.windows.net"
		},
		"LS_logadlsoindrila2022march_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://logadlsoindrila2022march.dfs.core.windows.net"
		},
		"http_World_Bank_Total_Population_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://api.worldbank.org/v2/country/ind/indicator/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/10_Learn_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Copy SQL Table into CSV File",
						"description": "Copy the Records of the Azure SQL Database Table \"dbo.Employee\" and Store the Records as a CSV File in ADLS Gen2.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.param_sqlQuery",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDbName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_containerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_directoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDbName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_sqlQuery": {
						"type": "string",
						"defaultValue": "SELECT * FROM dbo.Employee"
					},
					"param_containerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-data-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_Merge_Data_From_Multiple_Files_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Merge Data from Multiple Files to SQL Table",
						"description": "Copy Data from the Multiple CSV Files Present in the \"Hierarchy\" of \"Sub-Directories\" inside the Directory \"input-csv-files\" under the Container \"raw\" and Store the Merged Data into the SQL Table \"dbo.StudentMarks\".",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MiddleName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Subject",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubjectName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Marks",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Marks",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_containerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_directoryName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_sqldboindrila2022march_Param_Table",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDbName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									},
									"param_schemaName": {
										"value": "@pipeline().parameters.param_schemaName",
										"type": "Expression"
									},
									"param_tableName": {
										"value": "@pipeline().parameters.param_tableName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDbName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_storedProcedureName": {
						"type": "string"
					},
					"param_schemaName": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"param_tableName": {
						"type": "string",
						"defaultValue": "StudentMarks"
					},
					"param_containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "input-csv-files"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]",
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march_Param_Table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_Preserve_Directory_Hierarchy_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV Files Preserving Directory Hierarchy",
						"description": "Copy the CSV File from the Input Directory \"input-csv-files\" under the Input Container \"raw\", Preserving the Directory Hierarchy, to the Output Directory \"copy-data-output/pl-copy-data-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_inputContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_inputDirectoryName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_outputDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_inputContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_inputDirectoryName": {
						"type": "string",
						"defaultValue": "input-csv-files"
					},
					"param_outputContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_outputDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-data-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/13_Flatten_Directory_Hierarchy_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy CSV Files Flattening Directory Hierarchy",
						"description": "Copy the CSV File from the Input Directory \"input-csv-files\" under the Input Container \"raw\", Flattening the Directory Hierarchy, to the Output Directory \"copy-data-output/pl-copy-data-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "LS_logadlsoindrila2022march",
										"type": "LinkedServiceReference"
									},
									"path": "copy-data-log-container/copy-data-log-directory"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_inputContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_inputDirectoryName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_outputDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_inputContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_inputDirectoryName": {
						"type": "string",
						"defaultValue": "input-csv-files"
					},
					"param_outputContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_outputDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-data-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-5"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_logadlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/14_Learn_If_Condition_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Verify If City Exists",
						"description": "Verify if the Value of Pipeline Parameter \"param_cityToSearch\" Exists in the Pipeline Parameter \"param_listOfCities\" of Type Array",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.param_listOfCities, pipeline().parameters.param_cityToSearch)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Text for False",
									"description": "Set the Text \"No. It Does Not Exist\" to the Pipeline Variable \"ifCityExists\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_ifCityExists",
										"value": "No. It Does Not Exist"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Text for True",
									"description": "Set the Text \"Yes. It Exists\" to the Pipeline Variable \"ifCityExists\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_ifCityExists",
										"value": "Yes. It Exists"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_listOfCities": {
						"type": "array",
						"defaultValue": [
							"New York",
							"London",
							"Tokyo",
							"Singapore City",
							"Lisbon"
						]
					},
					"param_cityToSearch": {
						"type": "string",
						"defaultValue": "Kolkata"
					}
				},
				"variables": {
					"var_ifCityExists": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-6"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/15_Learn_Get_Metadata_Activity_For_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata of Folder",
						"description": "Get the following Metadata information of the Folder, Pointed by the Pipeline Parameters \"param_containerName\" and \"param_directoryName\" -\n\n1. Type\n2. Exists\n3. Name\n4. Child Items\n5. Last Modified Date and Time",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CSV_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_containerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_directoryName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"exists",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Verify Item Type is Folder",
						"description": "Verify If the Item, Pointed by the Dataset “DS_CSV_With_Contaner_Directory_Params” is a \"Folder\", or, Not.",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata of Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata of Folder').output.itemType, 'Folder')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Item Type As File",
									"description": "Set the Value of the Pipeline Variable \"itemType\" with the Text \"This is a File\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_itemType",
										"value": "This is a File"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Item Type As Folder",
									"description": "Set the Value of the Pipeline Variable \"itemType\" with the Text \"This is a Folder\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_itemType",
										"value": "This is a Folder"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_containerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-for-each-copy-data-activity"
					}
				},
				"variables": {
					"var_itemType": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/16_Learn_Get_Metadata_Activity_For_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata of File",
						"description": "Get the following Metadata information of the File, Pointed by the Pipeline Parameters \"param_containerName\", \"param_directoryName\" and \"param_fileName\" -\n\n1. Column count\n2. Exists\n3. Item Name\n4. Item Type\n5. Last Modified Date and Time\n6. Size\n7. Structure",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CSV_With_Container_Directory_File_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_containerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_directoryName",
										"type": "Expression"
									},
									"param_fileName": {
										"value": "@pipeline().parameters.param_fileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Verify Item Type is File",
						"description": "Verify If the Item, Pointed by the Dataset “DS_CSV_With_Contaner_Directory_File_Params” is a \"File\", or, Not.",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata of File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata of File').output.itemType, 'File')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Item Type As Folder",
									"description": "Set the Value of the Pipeline Variable \"itemType\" with the Text \"This is a Folder\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_itemType",
										"value": "This is a Folder"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Item Type As File",
									"description": "Set the Value of the Pipeline Variable \"var_itemType\" with the Text \"This is a File\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_itemType",
										"value": "This is a Folder"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "input-csv-files/1988/09/02/"
					},
					"param_fileName": {
						"type": "string",
						"defaultValue": "Students_1.csv"
					}
				},
				"variables": {
					"var_itemType": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_File_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/17_Learn_Validation_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation of ADLS Directory in Dataset",
						"description": "Verify if the Directory \"input-json-files\"  Exists under the Container \"raw\"",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Json_With_Container_And_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_containerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_directoryName",
										"type": "Expression"
									}
								}
							},
							"timeout": "0.00:01:00",
							"sleep": 1
						}
					},
					{
						"name": "Verify If Directory Exists",
						"description": "Verify If the \"Validation\" Activity is Returning \"true\" or \"false\".",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Validation of ADLS Directory in Dataset",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Validation of ADLS Directory in Dataset').output.exists",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set Negative To Directory Exists Variable_copy1",
									"description": "Set the Value \"No. The Directory Does Not Exist\" in the Pipeline Variable \"var_ifDirectoryExists\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_ifDirectoryExists",
										"value": "No. The Directory Does Not Exist"
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set Affirmative To Directory Exists Variable",
									"description": "Set the Value \"Yes. Directory Exists\" in the Pipeline Variable \"var_ifDirectoryExists\".",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_ifDirectoryExists",
										"value": "Yes. Directory Exists"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "input-json-files"
					}
				},
				"variables": {
					"var_ifDirectoryExists": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-6"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Json_With_Container_And_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/18_Learn_ForEach_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup Table Employee",
						"description": "Use this \"Lookup\" Activity to Execute the Query, Provided in the Pipeline Parameter \"param_sqlQuery\".",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.param_sqlQuery",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDbName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Each Row of Lookup Output",
						"description": "Iterate Over Each Row of the Output of the Previous \"Lookup\" Activity that Executes the Query, Provided in the Pipeline Parameter \"param_sqlQuery\".",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table Employee').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Each Output Row of Lookup",
									"description": "Copy Each \"Output Row\" of the \"Lookup\" Activity to the Directory “copy-data-output/pl-for-each-copy-data-activity” as a CSV File under the Container “stage” in the Azure Data Lake Storage Gen2 resource “adlsoindrila2022march”.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": true
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT Id, FirstName, LastName, Address FROM dbo.Employee WHERE Id = ''', item().Id, '''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_sqldboindrila2022march",
											"type": "DatasetReference",
											"parameters": {
												"param_sqlServerName": {
													"value": "@pipeline().parameters.param_sqlServerName",
													"type": "Expression"
												},
												"param_databaseName": {
													"value": "@pipeline().parameters.param_sqlServerDbName",
													"type": "Expression"
												},
												"param_adminUserName": {
													"value": "@pipeline().parameters.param_sqlServerAdminUserName",
													"type": "Expression"
												},
												"param_password": {
													"value": "@activity('Find SQL Server Password KV Secret').output.value",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_CSV_With_Container_Directory_Params",
											"type": "DatasetReference",
											"parameters": {
												"param_containerName": {
													"value": "@pipeline().parameters.param_containerName",
													"type": "Expression"
												},
												"param_directoryName": {
													"value": "@pipeline().parameters.param_directoryName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDbName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_sqlQuery": {
						"type": "string",
						"defaultValue": "SELECT * FROM dbo.Employee"
					},
					"param_containerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-for-each-copy-data-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-7"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/19_Learn_Switch_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup Table Employee",
						"description": "Use this \"Lookup\" Activity to Execute the Query, Provided in the Pipeline Parameter \"param_sqlQuery\".",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.param_sqlQuery",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDbName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Each Row of Lookup Output",
						"description": "Iterate Over Each Row of the Output of the Previous \"Lookup\" Activity that Executes the Query, Provided in the Pipeline Parameter \"param_sqlQuery\".",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Table Employee",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Table Employee').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch On City Values",
									"description": "Depending on the Name of the \"City\", \"Copy\" the Data to Different Folders.",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().Address",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Kolkata",
												"activities": [
													{
														"name": "Set Addres Variable To Kolkata",
														"description": "Set the Value \"Kolkata\" as the Pipeline Variable \"var_address\" for the Selected Case \"Kolkata\".",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "var_address",
															"value": "Kolkata"
														}
													}
												]
											},
											{
												"value": "Noida",
												"activities": [
													{
														"name": "Set Addres Variable To Noida",
														"description": "Set the Value \"Noida\" as the Pipeline Variable \"var_address\" for the Selected Case \"Noida\".",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "var_address",
															"value": "Noida"
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "Set Addres Variable To Other City",
												"description": "Set the Value \"Other City\" as the Pipeline Variable \"var_address\" for the Default Case.",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_address",
													"value": "Other City"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDbName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_sqlQuery": {
						"type": "string",
						"defaultValue": "SELECT * FROM dbo.Employee"
					},
					"param_containerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "switch-activity-output"
					}
				},
				"variables": {
					"var_address": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-7"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_PL_Learn_Set_Variable_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set City Name Variable",
						"description": "Get the Value of the Property \"City\" from the Pipeline Parameter \"param_addressLine\" of \"String\" Type and Store into the Variable \"var_cityName\".",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_cityName",
							"value": {
								"value": "@trim(split(split(pipeline().parameters.param_addressLine, ',')[1], ':')[1])",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_addressLine": {
						"type": "string",
						"defaultValue": "Address: 221 M.G. Road, City: Kolkata, State: West Bengal"
					}
				},
				"variables": {
					"var_cityName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-1"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/20_Learn_Wait_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait for Specified Time",
						"description": "Wait for the Specified Time, Provided in the Pipeline Parameter \"waitTimeInSecond\".",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": {
								"value": "@pipeline().parameters.param_waitTimeInSecond",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Wait Finish Message",
						"description": "Set the Value of the Pipeline Variable \"waitOutput\" as the Value of the Pipeline Parameter \"waitFinishMessage\".",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait for Specified Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_waitOutput",
							"value": {
								"value": "@pipeline().parameters.param_waitFinishMessage",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_waitTimeInSecond": {
						"type": "int",
						"defaultValue": 75
					},
					"param_waitFinishMessage": {
						"type": "string",
						"defaultValue": "Wait is over"
					}
				},
				"variables": {
					"var_waitOutput": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-7"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/21_Learn_Until_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait Until the File is Available",
						"description": "Wait \"Until\" the File Becomes Available.",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('var_isFileAvailable')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Existence Metadata of CSV File",
									"description": "Check the Existence of the File \"Students_1.csv\" in the Directory \"input-csv-files/pl-until-file\" Under the Container \"raw\" Using the \"Exists\" Field of \"Get Metadata\" Activity.",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_CSV_With_Container_Directory_File_Params",
											"type": "DatasetReference",
											"parameters": {
												"param_containerName": {
													"value": "@pipeline().parameters.param_containerName",
													"type": "Expression"
												},
												"param_directoryName": {
													"value": "@pipeline().parameters.param_directoryName",
													"type": "Expression"
												},
												"param_fileName": {
													"value": "@pipeline().parameters.param_fileName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Verify If File Exists",
									"description": "Verify If the File \"Students_1.csv\" Exists in the Directory \"input-csv-files/pl-until-file\" Under the Container \"raw\".",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Existence Metadata of CSV File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Existence Metadata of CSV File').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set Negative to File Exists Variable",
												"description": "Set the Value \"false\" to the Pipeline Variable \"var_isFileAvailable\".",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_isFileAvailable",
													"value": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set Affirmative to File Exists Variable",
												"description": "Set the Value \"true\" to the Pipeline Variable \"var_isFileAvailable\".",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_isFileAvailable",
													"value": true
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_containerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_directoryName": {
						"type": "string",
						"defaultValue": "input-csv-files/pl-until-file"
					},
					"param_fileName": {
						"type": "string",
						"defaultValue": "Students_1.csv"
					}
				},
				"variables": {
					"var_isFileAvailable": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-7"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_File_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/22_Learn_Delete_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait Until the File is Available",
						"description": "Wait \"Until\" the File Becomes Available.",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@variables('var_isFileAvailable')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Existence Metadata of CSV File",
									"description": "Check the Existence of the File \"Students_1.csv\" in the Directory \"input-csv-files/pl-until-file\" Under the Container \"raw\" Using the \"Exists\" Field of \"Get Metadata\" Activity.",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_CSV_With_Container_Directory_File_Params",
											"type": "DatasetReference",
											"parameters": {
												"param_containerName": {
													"value": "@pipeline().parameters.param_inputContainerName",
													"type": "Expression"
												},
												"param_directoryName": {
													"value": "@pipeline().parameters.param_inputDirectoryName",
													"type": "Expression"
												},
												"param_fileName": {
													"value": "@pipeline().parameters.param_inputFileName",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "Verify If File Exists",
									"description": "Verify If the File \"Students_1.csv\" Exists in the Directory \"input-csv-files/pl-until-file\" Under the Container \"raw\".",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Existence Metadata of CSV File",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Existence Metadata of CSV File').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set Negative to File Exists Variable",
												"description": "Set the Value \"false\" to the Pipeline Variable \"var_isFileAvailable\".",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_isFileAvailable",
													"value": false
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set Affirmative to File Exists Variable",
												"description": "Set the Value \"true\" to the Pipeline Variable \"var_isFileAvailable\".",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_isFileAvailable",
													"value": true
												}
											},
											{
												"name": "Copy CSV File",
												"description": "Copy the CSV File \"Students_1.csv\", When it Becomes Available, from the Input Directory \"input-csv-files/pl-until-file\" Under the Input Container \"raw\" to the Output Directory \"copy-data-output/pl-delete-copy-data-activity\" Under the Output Container \"stage\".",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set Affirmative to File Exists Variable",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_CSV_With_Container_Directory_File_Params",
														"type": "DatasetReference",
														"parameters": {
															"param_containerName": {
																"value": "@pipeline().parameters.param_inputContainerName",
																"type": "Expression"
															},
															"param_directoryName": {
																"value": "@pipeline().parameters.param_inputDirectoryName",
																"type": "Expression"
															},
															"param_fileName": {
																"value": "@pipeline().parameters.param_inputFileName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_CSV_With_Container_Directory_File_Params",
														"type": "DatasetReference",
														"parameters": {
															"param_containerName": {
																"value": "@pipeline().parameters.param_outputContainerName",
																"type": "Expression"
															},
															"param_directoryName": {
																"value": "@pipeline().parameters.param_outputDirectoryName",
																"type": "Expression"
															},
															"param_fileName": {
																"value": "@pipeline().parameters.param_inputFileName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Delete Source CSV File",
												"description": "After Copying, Delete the CSV File from the Directory \"input-csv-files/pl-until-file\" Under the Container \"raw\".",
												"type": "Delete",
												"dependsOn": [
													{
														"activity": "Copy CSV File",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 2,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataset": {
														"referenceName": "DS_CSV_With_Container_Directory_File_Params",
														"type": "DatasetReference",
														"parameters": {
															"param_containerName": {
																"value": "@pipeline().parameters.param_inputContainerName",
																"type": "Expression"
															},
															"param_directoryName": {
																"value": "@pipeline().parameters.param_inputDirectoryName",
																"type": "Expression"
															},
															"param_fileName": {
																"value": "@pipeline().parameters.param_inputFileName",
																"type": "Expression"
															}
														}
													},
													"logStorageSettings": {
														"linkedServiceName": {
															"referenceName": "LS_logadlsoindrila2022march",
															"type": "LinkedServiceReference"
														},
														"path": "delete-activity-log-container/delete-activity-log-directory"
													},
													"enableLogging": true,
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													}
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_inputContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_inputDirectoryName": {
						"type": "string",
						"defaultValue": "input-csv-files/pl-until-file"
					},
					"param_inputFileName": {
						"type": "string",
						"defaultValue": "Students_1.csv"
					},
					"param_outputContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_outputDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-delete-copy-data-activity"
					}
				},
				"variables": {
					"var_isFileAvailable": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-8"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_With_Container_Directory_File_Params')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_logadlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/23_Learn_Fail_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup Employee Table",
						"description": "Use this \"Lookup\" Activity to Fetch the Result of the SQL Query \"SELECT * FROM dbo.Employee WHERE Address = '\" + param_address + \"'\".",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM dbo.Employee WHERE Address = ''', pipeline().parameters.param_address, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDatabaseName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Verify Lookup Result",
						"description": "Verify If the Previous Lookup Activity Returns Result Set",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Employee Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Lookup Employee Table').output.count, 0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail On Lookup Employee Table",
									"description": "Provide the Error Message on Failure of the Previous Lookup Activity",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@concat('The Employee Information Could Not be Found Living in the City \"', pipeline().parameters.param_address, '\"')",
											"type": "Expression"
										},
										"errorCode": {
											"value": "@pipeline().parameters.param_failureCode",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDatabaseName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_address": {
						"type": "string",
						"defaultValue": "Tokyo"
					},
					"param_failureCode": {
						"type": "string",
						"defaultValue": "Error_400"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-8"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/24_Learn_Unzip_Files_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip the Zipped CSV Files",
						"description": "Unzip the Zipped CSV Files from the Input Directory \"input-zip-files\" under the Input Container \"raw\" to the Output Directory \"copy-data-output/pl-copy-unzip-file-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Zip_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_inputZipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_inputZipDirectoryName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Binary_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputUnzipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_outputUnzipDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_inputZipContainerName": {
						"type": "string",
						"defaultValue": "raw"
					},
					"param_inputZipDirectoryName": {
						"type": "string",
						"defaultValue": "input-zip-files"
					},
					"param_outputUnzipContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_outputUnzipDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-unzip-file-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-8"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Zip_File_With_Container_Directory_Params')]",
				"[concat(variables('factoryId'), '/datasets/DS_Binary_File_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_PL_Learn_Append_Variable_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Append City Name to List of Cities Variable",
						"description": "Append the Value of the Variable \"var_cityName\" to the Existing Array Variable \"var_listOfCities\".",
						"type": "AppendVariable",
						"dependsOn": [
							{
								"activity": "Set City Name Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_listOfCities",
							"value": {
								"value": "@variables('var_cityName')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set City Name Variable",
						"description": "Get the Value of the Property \"City\" from the Pipeline Parameter \"param_addressLine\" of \"String\" Type.",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_cityName",
							"value": {
								"value": "@trim(split(split(pipeline().parameters.param_addressLine, ',')[1], ':')[1])",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set List of Cities Variable to Another Variable",
						"description": "Set the Value of the Array Variable \"var_listOfCities\" to the Existing Empty Array Variable \"var_appendedCities\".",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Append City Name to List of Cities Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_appendedCities",
							"value": {
								"value": "@variables('var_listOfCities')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_addressLine": {
						"type": "string",
						"defaultValue": "Address: 221 M.G. Road, City: Kolkata, State: West Bengal"
					}
				},
				"variables": {
					"var_cityName": {
						"type": "String"
					},
					"var_listOfCities": {
						"type": "Array",
						"defaultValue": [
							"New York",
							"London",
							"Tokyo",
							"Singapore City"
						]
					},
					"var_appendedCities": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-1"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_PL_Learn_Filter_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter City Starting With Letter - L",
						"description": "Filter All the Cities, Starting with the Letter \"L\", from the Pipeline Parameter \"param_listOfCities\".",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.param_listOfCities",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item(), 'L')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_listOfCities": {
						"type": "array",
						"defaultValue": [
							"New York",
							"London",
							"Tokyo",
							"Singapore City",
							"Lisbon"
						]
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-1"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_Learn_Web_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find Weather Info of City",
						"description": "Access the REST API BASE URL \"http://api.weatherstack.com/current/\", and, pass \"City Name\" and the \"Access Key\" as \"Query String\", appended to the BASE URL, separated by a \"Question Mark\", i.e., \"?\".",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('http://api.weatherstack.com/current?access_key=', pipeline().parameters.param_accessKey, '&query=', pipeline().parameters.param_cityName)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_cityName": {
						"type": "string",
						"defaultValue": "Kolkata"
					},
					"param_accessKey": {
						"type": "string",
						"defaultValue": "7b1a503846c18a56136f8ab3c90d5017"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-2"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_Learn_To_Access_KV_Secret_From_ADF_PL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find API Access Key KV Secret",
						"description": "Fetch the Value of the Secret \"kv-secret-for-weather-api-access-key\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-secret-for-weather-api-access-key/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Find Weather Info of City",
						"description": "Access the REST API BASE URL \"http://api.weatherstack.com/current/\", and, pass \"City Name\" and the \"Access Key\" as \"Query String\", appended to the BASE URL, separated by a \"Question Mark\", i.e., \"?\".",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Find API Access Key KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('http://api.weatherstack.com/current?access_key=', activity('Find API Access Key KV Secret').output.value, '&query=', pipeline().parameters.param_cityName)",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_cityName": {
						"type": "string",
						"defaultValue": "Kolkata"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-2"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/6_Learn_Stored_Procedure_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Insert Stored Procedure",
						"description": "Call the Stored Procedure \"SP_InsertPipelineRunDetails\" to Insert the Pipeline Run Details to the Table \"tbl_PipelineRunDetails\".",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@pipeline().parameters.param_storedProcedureName",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerRunId": {
									"value": {
										"value": "@pipeline().TriggerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerRunTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQLServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"param_ServerName": {
									"value": "@pipeline().parameters.param_sqlServerName",
									"type": "Expression"
								},
								"param_DatabaseName": {
									"value": "@pipeline().parameters.param_sqlServerDatabaseName",
									"type": "Expression"
								},
								"param_AdminUserName": {
									"value": "@pipeline().parameters.param_sqlServerAdminUserName",
									"type": "Expression"
								},
								"param_Password": {
									"value": "@activity('Find SQL Server Password KV Secret').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDatabaseName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_storedProcedureName": {
						"type": "string",
						"defaultValue": "dbo.SP_InsertPipelineRunDetails"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7_Learn_Stored_Procedure_Activity_With_Out_Param')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Data Retrieval Stored Procedure",
						"description": "Call the Stored Procedure \"dbo.SP_GetEmployeeDetails\" to Fetch the Details of the Table \"Employee\".",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": {
								"value": "@pipeline().parameters.param_storedProcedureName",
								"type": "Expression"
							},
							"storedProcedureParameters": {
								"Address": {
									"value": {
										"value": "@pipeline().parameters.param_address",
										"type": "Expression"
									},
									"type": "String"
								},
								"Id": {
									"value": null,
									"type": "Int32"
								},
								"FirstName": {
									"value": null,
									"type": "String"
								},
								"LastName": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_SQLServer",
							"type": "LinkedServiceReference",
							"parameters": {
								"param_ServerName": {
									"value": "@pipeline().parameters.param_sqlServerName",
									"type": "Expression"
								},
								"param_DatabaseName": {
									"value": "@pipeline().parameters.param_sqlServerDatabaseName",
									"type": "Expression"
								},
								"param_AdminUserName": {
									"value": "@pipeline().parameters.param_sqlServerAdminUserName",
									"type": "Expression"
								},
								"param_Password": {
									"value": "@activity('Find SQL Server Password KV Secret').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDatabaseName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_storedProcedureName": {
						"type": "string",
						"defaultValue": "dbo.SP_GetEmployeeDetails"
					},
					"param_address": {
						"type": "string",
						"defaultValue": "Kolkata"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-3"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/8_Learn_LookUp_Activity_With_Out_Param_SP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup SP With Out Param Result",
						"description": "Use this \"Lookup\" Activity to Call the Stored Procedure \"dbo.SP_GetEmployeeDetails\" to Fetch the Details of the Table \"Employee\" Based on the Provided Filter Value as Pipeline Parameter \"param_address\".",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": {
									"value": "@pipeline().parameters.param_storedProcedureName",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"Address": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.param_address",
											"type": "Expression"
										}
									},
									"Id": {
										"type": "Int32",
										"value": null
									},
									"FirstName": {
										"type": "String",
										"value": null
									},
									"LastName": {
										"type": "String",
										"value": null
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDatabaseName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDatabaseName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_storedProcedureName": {
						"type": "string",
						"defaultValue": "dbo.SP_GetEmployeeDetails"
					},
					"param_address": {
						"type": "string",
						"defaultValue": "Kolkata"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/9_Learn_LookUp_Activity_With_SQL_Query')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find SQL Server Password KV Secret",
						"description": "Fetch the Value of the Secret \"kv-sqlserveroindrila2022march-pwd\" from the Azure Key Vault resource “KV-Oindrila-2022-March”",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-oindrila-2022-march.vault.azure.net/secrets/kv-sqlserveroindrila2022march-pwd/?api-version=7.0",
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Lookup SQL Query",
						"description": "Use this \"Lookup\" Activity to Fetch the Result of the SQL Query \"SELECT * FROM dbo.Employee WHERE Address = '\" + param_address + \"'\".",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find SQL Server Password KV Secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM dbo.Employee WHERE Address = ''', pipeline().parameters.param_address, '''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_sqldboindrila2022march",
								"type": "DatasetReference",
								"parameters": {
									"param_sqlServerName": {
										"value": "@pipeline().parameters.param_sqlServerName",
										"type": "Expression"
									},
									"param_databaseName": {
										"value": "@pipeline().parameters.param_sqlServerDatabaseName",
										"type": "Expression"
									},
									"param_adminUserName": {
										"value": "@pipeline().parameters.param_sqlServerAdminUserName",
										"type": "Expression"
									},
									"param_password": {
										"value": "@activity('Find SQL Server Password KV Secret').output.value",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string",
						"defaultValue": "sqlserveroindrila2022march.database.windows.net"
					},
					"param_sqlServerDatabaseName": {
						"type": "string",
						"defaultValue": "sqldboindrila2022march"
					},
					"param_sqlServerAdminUserName": {
						"type": "string",
						"defaultValue": "oindrila2022march"
					},
					"param_address": {
						"type": "string",
						"defaultValue": "Kolkata"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-4"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_sqldboindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Call_ADB_Notebook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Calling one Databricks Notebook",
				"activities": [
					{
						"name": "Calling Notebook",
						"description": "Call the Notebook \"nbk_Introduction_To_Widgets\".",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/oindrila.chakraborty88_gmail.com#ext#@oindrilachakraborty88gmail.onmicrosoft.com/Training-Day-5/nbk_Introduction_To_Widgets",
							"baseParameters": {
								"Text Widget": "Soumyajyoti Bagchi",
								"Dropdown Widget": "17"
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_oindrila_workspace_2022_march",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Calling Other Services Folder"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_oindrila_workspace_2022_march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Binary_File_With_Container_Directory_Params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsoindrila2022march",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_containerName": {
						"type": "string"
					},
					"param_directoryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().param_directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().param_containerName",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_With_Container_Directory_File_Params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsoindrila2022march",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_containerName": {
						"type": "string"
					},
					"param_directoryName": {
						"type": "string"
					},
					"param_fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().param_fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().param_directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().param_containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_With_Container_Directory_Params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsoindrila2022march",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_containerName": {
						"type": "string"
					},
					"param_directoryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().param_directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().param_containerName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Json_With_Container_And_Directory_Params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsoindrila2022march",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_containerName": {
						"type": "string"
					},
					"param_directoryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().param_directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().param_containerName",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Zip_File_With_Container_Directory_Params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_adlsoindrila2022march",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_containerName": {
						"type": "string"
					},
					"param_directoryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().param_directoryName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().param_containerName",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_adlsoindrila2022march')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sqldboindrila2022march')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"param_ServerName": {
							"value": "@dataset().param_sqlServerName",
							"type": "Expression"
						},
						"param_DatabaseName": {
							"value": "@dataset().param_databaseName",
							"type": "Expression"
						},
						"param_AdminUserName": {
							"value": "@dataset().param_adminUserName",
							"type": "Expression"
						},
						"param_Password": {
							"value": "@dataset().param_password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string"
					},
					"param_databaseName": {
						"type": "string"
					},
					"param_adminUserName": {
						"type": "string"
					},
					"param_password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_sqldboindrila2022march_Param_Table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"param_ServerName": {
							"value": "@dataset().param_sqlServerName",
							"type": "Expression"
						},
						"param_DatabaseName": {
							"value": "@dataset().param_databaseName",
							"type": "Expression"
						},
						"param_AdminUserName": {
							"value": "@dataset().param_adminUserName",
							"type": "Expression"
						},
						"param_Password": {
							"value": "@dataset().param_password",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"param_sqlServerName": {
						"type": "string"
					},
					"param_databaseName": {
						"type": "string"
					},
					"param_adminUserName": {
						"type": "string"
					},
					"param_password": {
						"type": "string"
					},
					"param_schemaName": {
						"type": "string"
					},
					"param_tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().param_schemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().param_tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_KV_Oindrila_2022_March')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service to Connect to the Azure Key Vault Instance \"KV-Oindrila-2022-March\" from Azure Data Factory Instance \"ADF-Oindrila-2022-March\".",
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KV_Oindrila_2022_March_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service for connecting to SQL Server resource \"sqlserveroindrila2022march\"",
				"parameters": {
					"param_ServerName": {
						"type": "string"
					},
					"param_DatabaseName": {
						"type": "string"
					},
					"param_AdminUserName": {
						"type": "string"
					},
					"param_Password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_SQLServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_adlsoindrila2022march')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service for connecting to Azure Data Lake Storage Gen2 ‘adlsoindrila2022march’",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_adlsoindrila2022march_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_logadlsoindrila2022march')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service for Connecting to ADLS Gen2 Instance \"logadlsoindrila2022march\" from ADF Instance \"ADF-Oindrila-2022-March\" for Logging.",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_logadlsoindrila2022march_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV_Oindrila_2022_March",
							"type": "LinkedServiceReference"
						},
						"secretName": "kv-secret-for-logadlsoindrila2022march-access-key-1"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KV_Oindrila_2022_March')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_oindrila_workspace_2022_march')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "\"Linked Service\" to the Azure Databricks Instance \"oindrila_workspace_2022_march\".",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2428975292555881.1.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('LS_oindrila_workspace_2022_march_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "10.5.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/http_World_Bank_Total_Population')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This API gives a Zip file, containing main indicator details file, along with metadata files in CSV format",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('http_World_Bank_Total_Population_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/25_Learn_Issue_Of_Unzip_Files_From_API_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Unzip the Zipped CSV Files from API",
						"description": "Unzip the Zipped CSV Files from the API \"http://api.worldbank.org/v2/country/ind/indicator/AG.AGR.TRAC.NO?source=2&downloadformat=csv\" to the Output Directory \"copy-data-output/pl-copy-unzip-file-from-api-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_Zip_File",
								"type": "DatasetReference",
								"parameters": {
									"param_indicatorRelativeUrl": {
										"value": "@pipeline().parameters.param_relativeUrl",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Binary_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputUnzipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_outputUnzipDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_relativeUrl": {
						"type": "string",
						"defaultValue": "AG.AGR.TRAC.NO?source=2&downloadformat=csv"
					},
					"param_outputUnzipContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_outputUnzipDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-unzip-file-from-api-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-8"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_Zip_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_Binary_File_With_Container_Directory_Params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_HTTP_Zip_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "http_World_Bank_Total_Population",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"param_indicatorRelativeUrl": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().param_indicatorRelativeUrl",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/http_World_Bank_Total_Population')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/26_Learn_Unzip_Files_From_API_Using_Copy_Data_Activity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy the Zipped CSV Files from API to Stage",
						"description": "Copy the Zipped CSV Files from the API \"http://api.worldbank.org/v2/country/ind/indicator/AG.AGR.TRAC.NO?source=2&downloadformat=csv\" to the Staging Directory \"copy-data-output/stage-pl-copy-unzip-file-from-api-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_HTTP_Zip_File",
								"type": "DatasetReference",
								"parameters": {
									"param_indicatorRelativeUrl": {
										"value": "@pipeline().parameters.param_relativeUrl",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Zip_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputUnzipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_stageDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Unzip the Zipped CSV Files from Stage to Output",
						"description": "Unzip the Zipped CSV Files from the Stage Directory \"copy-data-output/stage-pl-copy-unzip-file-from-api-activity\" under the Output Container \"stage\" to the Output Directory \"copy-data-output/pl-copy-unzip-file-from-api-activity\" under the Output Container \"stage\".",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy the Zipped CSV Files from API to Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Zip_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputUnzipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_stageDirectoryName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Binary_File_With_Container_Directory_Params",
								"type": "DatasetReference",
								"parameters": {
									"param_containerName": {
										"value": "@pipeline().parameters.param_outputUnzipContainerName",
										"type": "Expression"
									},
									"param_directoryName": {
										"value": "@pipeline().parameters.param_outputUnzipDirectoryName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"param_relativeUrl": {
						"type": "string",
						"defaultValue": "AG.AGR.TRAC.NO?source=2&downloadformat=csv"
					},
					"param_outputUnzipContainerName": {
						"type": "string",
						"defaultValue": "stage"
					},
					"param_stageDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/stage-pl-copy-unzip-file-from-api-activity"
					},
					"param_outputUnzipDirectoryName": {
						"type": "string",
						"defaultValue": "copy-data-output/pl-copy-unzip-file-from-api-activity"
					}
				},
				"folder": {
					"name": "Training Folder/Learning Activities/Day-8"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_HTTP_Zip_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_Zip_File_With_Container_Directory_Params')]",
				"[concat(variables('factoryId'), '/datasets/DS_Binary_File_With_Container_Directory_Params')]"
			]
		}
	]
}